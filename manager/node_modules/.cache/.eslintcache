[{"/home/zhkim/github/whateverdot/whateverdot/manager/src/index.js":"1","/home/zhkim/github/whateverdot/whateverdot/manager/src/reportWebVitals.js":"2","/home/zhkim/github/whateverdot/whateverdot/manager/src/App.js":"3","/home/zhkim/github/whateverdot/whateverdot/manager/src/Resources.js":"4","/home/zhkim/github/whateverdot/whateverdot/manager/src/components/ButtonOpenAddWorkWindow.js":"5","/home/zhkim/github/whateverdot/whateverdot/manager/src/components/PopupWorkCreate.js":"6","/home/zhkim/github/whateverdot/whateverdot/manager/src/components/Header.js":"7","/home/zhkim/github/whateverdot/whateverdot/manager/src/components/WorkTable.js":"8","/home/zhkim/github/whateverdot/whateverdot/manager/src/components/ButtonCreateWork.js":"9","/home/zhkim/github/whateverdot/whateverdot/manager/src/components/CheckboxTarget.js":"10","/home/zhkim/github/whateverdot/whateverdot/manager/src/components/PopupWorkDetail.js":"11","/home/zhkim/github/whateverdot/whateverdot/manager/src/components/WorkItem.js":"12","/home/zhkim/github/whateverdot/whateverdot/manager/src/components/ProgressStateTextBox.js":"13","/home/zhkim/github/whateverdot/whateverdot/manager/src/components/ButtonControl.js":"14"},{"size":500,"mtime":1633058172037,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1633058172037,"results":"17","hashOfConfig":"16"},{"size":2559,"mtime":1633325827465,"results":"18","hashOfConfig":"16"},{"size":2600,"mtime":1633447877644,"results":"19","hashOfConfig":"16"},{"size":2094,"mtime":1633058171857,"results":"20","hashOfConfig":"16"},{"size":16369,"mtime":1633071373161,"results":"21","hashOfConfig":"16"},{"size":475,"mtime":1633058171857,"results":"22","hashOfConfig":"16"},{"size":4165,"mtime":1633447877644,"results":"23","hashOfConfig":"16"},{"size":1266,"mtime":1633058171857,"results":"24","hashOfConfig":"16"},{"size":697,"mtime":1633058171857,"results":"25","hashOfConfig":"16"},{"size":15023,"mtime":1633058171861,"results":"26","hashOfConfig":"16"},{"size":11159,"mtime":1633447877644,"results":"27","hashOfConfig":"16"},{"size":2183,"mtime":1633324159097,"results":"28","hashOfConfig":"16"},{"size":3578,"mtime":1633058171857,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"mto2on",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},"/home/zhkim/github/whateverdot/whateverdot/manager/src/index.js",[],["64","65"],"/home/zhkim/github/whateverdot/whateverdot/manager/src/reportWebVitals.js",[],"/home/zhkim/github/whateverdot/whateverdot/manager/src/App.js",["66","67"],"import './App.css';\nimport React, { useState } from \"react\";\nimport ButtonOpenAddWorkWindow from \"./components/ButtonOpenAddWorkWindow\";\nimport * as R from \"./Resources\";\nimport Header from './components/Header'\nimport WorkTable from \"./components/WorkTable\";\nimport PopupWorkCreate from \"./components/PopupWorkCreate\"\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false\n        };\n\n        this.togglePopup = this.togglePopup.bind(this);\n    }\n\n    togglePopup = () => {\n        this.setState({isOpen: !this.state.isOpen})\n    }\n\n    // componentDidMount() {\n    //     fetch(\"http://localhost:3001/action/get_work_group_list\")\n    //         .then(res => res.json())\n    //         .then(data => this.setState({title: data.title}))\n    // }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Header/>\n                <div style={{margin: 'auto', width: '80%', marginBottom: 20}}>\n                    <ButtonOpenAddWorkWindow onClick={this.togglePopup}/>\n                </div>\n\n                <WorkTable openPopup={this.togglePopup}/>\n                {this.state.isOpen && <PopupWorkCreate\n                    content={<>\n                        {/*<b>Design your PopupWorkCreate</b>*/}\n                        {/*<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>*/}\n                        {/*<button>Test button</button>*/}\n                    </>}\n                    handleClose={this.togglePopup}\n                />}\n            </div>\n\n\n        );\n    }\n\n\n//   function App() {\n//     return (\n//       <div className=\"App\">\n//         <header className=\"App-header\">\n//           <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//           <p>\n//             Edit <code>src/App.js</code> and save to reload.\n//           </p>\n//           <a\n//             className=\"App-link\"\n//             href=\"https://reactjs.org\"\n//             target=\"_blank\"\n//             rel=\"noopener noreferrer\"\n//           >\n//             Learn React\n//           </a>\n//         </header>\n//       </div>\n//     );\n//   }\n}\nexport default App;","/home/zhkim/github/whateverdot/whateverdot/manager/src/Resources.js",[],"/home/zhkim/github/whateverdot/whateverdot/manager/src/components/ButtonOpenAddWorkWindow.js",["68"],"import React from \"react\";\nimport * as R from \"../Resources\";\n\nclass ButtonOpenAddWorkWindow extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleMouseHover = this.handleMouseHover.bind(this);\n        this.handleMouseLeave = this.handleMouseLeave.bind(this);\n        this.state = {\n            backgroundColor: '#1b1b1b',\n            opacity: 1.0,\n        };\n    }\n\n    handleMouseHover() { this.setState(this.toggleHoverState); }\n    handleMouseLeave() { this.setState(this.toggleLeaveState); }\n\n    toggleHoverState(state) { return { backgroundColor: '#323232' }; }\n    toggleLeaveState(state) { return { backgroundColor: '#1b1b1b' }; }\n\n    update() {\n        const expression = R.StateExpression[this.props.value];\n        this.expression.label = expression.label;\n        this.expression.backgroundColor = expression.backgroundColor;\n    }\n\n    render() {\n\n        return (\n            <div\n                onMouseEnter={this.handleMouseHover}\n                onMouseLeave={this.handleMouseLeave}\n                onClick={() => this.props.onClick()}\n                style={{\n                    position: 'relative',\n                    // opacity: this.state.opacity,\n                    backgroundColor: this.state.backgroundColor,\n                    cursor: 'pointer',\n                    width: '100%',\n                    height: 120}}>\n                <div style={{\n                    display: 'flex',\n                    position: 'absolute',\n                    top: '50%',\n                    left: '50%',\n                    transform: 'translate(-50%, -50%)' }}>\n                    <img src={R.Images.addWork}\n                         style={{\n                             width:52,\n                             height: 52, }} />\n                    <div style={{\n                        fontWeight:'bolder',\n                        fontSize: 32,\n                        color: '#ACACAC' }}>&nbsp;&nbsp;새 작업 추가하기</div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default ButtonOpenAddWorkWindow;","/home/zhkim/github/whateverdot/whateverdot/manager/src/components/PopupWorkCreate.js",["69","70","71","72","73"],"import React, {useState}from \"react\"\nimport '../App.css';\nimport * as R from \"../Resources\";\nimport DatePicker, { registerLocale, setDefaultLocale } from  \"react-datepicker\";\nimport ButtonControlPopup from \"./ButtonCreateWork\"\nimport CheckboxTarget from \"./CheckboxTarget\"\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ko from 'date-fns/locale/ko';\nimport axios from 'axios';\nregisterLocale('ko', ko)\n\n\n\nconst ParentComponent = props => (\n    <div>\n        <div style={{\n            width: '100%',\n            marginTop: 20,\n            fontSize: 18,\n            display:'flex'\n        }}>\n            <div style={{width:'5%' }}/>\n            <div style={{width:'15%', textAlign:'center'}}>키워드1</div>\n            <input style={{width: '50%'}} type='text' onChange={props.keywordChanged} value={props.keyword1}/>\n            <select value={props.keywordOpt1} onChange={props.keywordOptChanged} disabled={true}>\n                <option value=\"and\">AND</option>\n                <option value=\"or\">OR</option>\n            </select>\n            <div style={{width:10 }}/>\n\n            <button style={{\n                width:50, fontSize:14, cursor:'pointer',\n                backgroundColor:'#0099FF', color: '#FFFFFF', border:'0px'}}\n                    onClick={props.addChild}>추가\n            </button>\n\n        </div>\n        <div>\n            {props.children}\n        </div>\n    </div>\n);\n\nconst ChildComponent = (props) => <div>\n\n    <div style={{\n        width: '100%',\n        marginTop: 20,\n        fontSize: 18,\n        display:'flex'\n    }}>\n        <div style={{width:'5%' }}/>\n        <div style={{width:'15%', textAlign:'center'}}>키워드{props.number}</div>\n        <input style={{width: '50%'}} type='text'\n               onChange={props.keywordChanged}\n               value={props.keyword} />\n        <select\n            onChange={props.keywordOptChanged}\n            value={props.keywordOpt} >\n            <option value=\"and\">AND</option>\n            <option value=\"or\">OR</option>\n        </select>\n    </div>\n\n</div>;\n\n\nconst moment = require('moment');\n\nclass PopupWorkCreate extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleMouseHover = this.handleMouseHover.bind(this);\n        this.handleMouseLeave = this.handleMouseLeave.bind(this);\n\n        this.state = {\n            opacity: 1.0,\n            numChildren: 1,\n            name: '테스트',\n            keyword1: '코로나',\n            keywordOpt1: 'and',\n            startDate: moment('2020-01-01').toDate(),\n            endDate: moment('2020-02-07').toDate(),\n            targetNaver: false,\n            targetDaum: false,\n            targetChosun: false,\n            targetDonga: false,\n            targetJoongang: false,\n            targetTweeter: false,\n            targetFacebook: false,\n            targetNaverBlog: false,\n            targetInstagram: false,\n        };\n    }\n\n    handleMouseHover(e) { this.setState(this.toggleHoverState); }\n    handleMouseLeave(e) { this.setState(this.toggleLeaveState); }\n    toggleHoverState(e) { return { opacity: 0.5 }; }\n    toggleLeaveState(e) { return { opacity: 1.0 }; }\n\n    onAddChild = () => {\n        if( this.state.numChildren === 5) {\n            alert('더 이상 키워드를 추가할 수 없습니다.');\n            return;\n        }\n\n        this.state[ 'keyword' + ( this.state.numChildren + 1 )  ] = '';\n        this.state[ 'keywordOpt' + ( this.state.numChildren + 1 )  ] = '';\n        this.setState({\n            numChildren: this.state.numChildren + 1\n        });\n    };\n\n    onNameChanged = (d) => {\n        // console.log(d)\n        this.setState({\n            name: d.target.value,\n        })\n    };\n\n    onStartDateChanged = (d) => {\n        // console.log(moment(d).format('YYYY-MM-DD'))\n        this.setState({\n            startDate: d,\n        })\n    };\n\n    onEndDateChanged = (d) => {\n        // console.log(moment(d).format('YYYY-MM-DD'))\n        this.setState({\n            endDate: d,\n        })\n    };\n\n    onTargetChanged = (d) => {\n        const name = d.target.name;\n        const value = this.state[name];\n        // console.log(name);\n        // console.log(value);\n        this.setState({ [name]: !value })\n    };\n\n    onSubmit = (e) => {\n\n\n        let collectTarget = (\n            // (this.state.targetNaver === true ? 'naver/' : '') +\n            // (this.state.targetDaum === true ? 'daum/' : '') +\n            // (this.state.targetChosun === true ? 'chosun/' : '') +\n            (this.state.targetJoongang === true ? 'jna,' : '') +\n            // (this.state.targetDonga === true ? 'donga/' : '') +\n            (this.state.targetTweeter === true ? 'twt,' : '') +\n            (this.state.targetInstagram === true ? 'ins,' : '') +\n            (this.state.targetNaverBlog === true ? 'nav,' : '')\n        );\n\n        let data = {\n            title: this.state.name,\n            start_dt: moment(this.state.startDate).format('YYYY-MM-DD'),\n            end_dt: moment(this.state.endDate).format('YYYY-MM-DD'),\n            channels: collectTarget,\n            keywords: '',\n            key_opts: ''\n        };\n\n        data['keywords'] = ''\n        for(let i=0; i<this.state.numChildren; i++) {\n            const no = (i + 1);\n            data['keywords'] += this.state['keyword' + no]  + ',';\n            // let keywordOpt = this.state['keywordOpt' + no];\n            // data['key_opts'] += (keywordOpt === '' ? 'and': keywordOpt) + ','\n        }\n\n        if (data['channels'].length > 0)\n            data['channels'] = data['channels'].substr(0, data['channels'].length - 1)\n\n        if (data['keywords'].length > 0)\n            data['keywords'] = data['keywords'].substr(0, data['keywords'].length - 1)\n\n        // if (data['key_opts'].length > 0)\n        //     data['key_opts'] = data['key_opts'].substr(0, data['key_opts'].length - 1)\n\n        if(window.confirm('새 작업을 추가하시겠습니까?')) {\n\n            console.log(data)\n            axios.post('http://localhost:3001/action/enroll_works', data).then((response) => {\n                console.log(data)\n                // console.log(response);\n                if(response.status === 200) {\n                    // window.location.reload();\n                    // window.scrollTo(0, 0);\n                }\n            });\n        }\n    };\n\n    render() {\n\n        const childrenNums = [];\n        for (var i = 2; i < this.state.numChildren + 1; i += 1) {\n            childrenNums.push(i);\n        }\n        const listItems = childrenNums.map((no) =>\n            <ChildComponent key={no} number={no}\n                            name={'keyword' + no}\n                            keywordChanged={(e) => {\n                                // console.dir(e.target.value)\n                                this.setState({['keyword' + no] : e.target.value})\n                            }}\n                            // keywordOptChanged={(e) => {\n                            //     this.setState({['keywordOpt' + no] : e.target.value})\n                            // }}\n                            keyword={this.state['keyword' + no]}/>\n                            // keywordOpt={this.state['keywordOpt' + no]}/>\n        );\n\n        return (\n            <div style={{\n                position: 'fixed',\n                background: '#00000044',\n                width: '100%',\n                height: '100vh',\n                top: 0,\n                left: 0\n            }}>\n\n                <div style={{\n                    position: 'relative',\n                    width: '80%',\n                    margin: '0 auto',\n                    height: 'auto',\n                    maxHeight: 100,\n                    marginTop: 'calc(100vh - 85vh - 20px)',\n                    background: '#000000',\n                    // paddingLeft: 20,\n                    // paddingRight: 20,\n                    paddingTop: 10,\n                    paddingBottom: 12,\n                    borderTop: '1px solid #999',\n                    borderLeft: '1px solid #999',\n                    borderRight: '1px solid #999',\n                    overflow: 'auto',\n                    display: 'flex'\n                }}>\n                    <div style={{fontSize: 20}}>&nbsp;&nbsp;&nbsp;&nbsp;새 작업 추가하기</div>\n                    <div style={{\n                        position: 'absolute',\n                        width: '100%',\n                        textAlign: 'right'}}>\n                        <div style={{\n                            cursor: 'pointer',\n                            display:'inline-block',\n                            width:30, height: 20,\n                            paddingTop: 5, paddingRight: 14, opacity: this.state.opacity}}\n                             onMouseEnter={this.handleMouseHover}\n                             onMouseLeave={this.handleMouseLeave}\n                             onClick={ this.props.handleClose }>\n                            <img src={R.Images['close']}/>\n                        </div>\n                    </div>\n                </div>\n\n                <div style={{\n                    position: 'relative',\n                    width: '80%',\n                    margin: '0 auto',\n                    height: '50%',\n                    background: '#212121',\n                    borderLeft: '1px solid #999',\n                    borderRight: '1px solid #999',\n                    borderBottom: '1px solid #999',\n                    overflow: 'auto',\n                }}>\n\n                    <div style={{\n                        width: '100%',\n                        marginTop: 40,\n                        fontSize: 18,\n                        display:'flex'\n                    }}>\n                        <div style={{width:'5%' }}/>\n                        <div style={{width:'15%', textAlign:'center'}}>작업이름</div>\n                        <input style={{width: '70%'}} type='text' onChange={this.onNameChanged} value={this.state.name}/>\n                        <div style={{width:'5%' }}/>\n                    </div>\n\n                    <ParentComponent\n                        addChild={this.onAddChild}\n                        keywordChanged={(e) => {\n                            // console.log(e.target)\n                            this.setState({\n                                keyword1: e.target.value,\n                            })\n                        }}\n                        keywordOptChanged={(e) => {\n                            // console.log(e.target)\n                            this.setState({\n                                keywordOpt1: e.target.value,\n                            })\n                        }}\n                        keyword1={this.state.keyword1}\n                        keywordOpt1={this.state.keywordOpt1}>\n                        {listItems}\n                    </ParentComponent>\n\n                    <div style={{\n                        width: '100%',\n                        marginTop: 40,\n                        fontSize: 18,\n                        display:'flex'\n                    }}>\n                        <div style={{width:'5%' }}/>\n                        <div style={{width:'15%', textAlign:'center'}}>수집기간</div>\n                        <DatePicker style={{width:'8%', textAlign:'center'}}\n                                    onChange={this.onStartDateChanged}\n                                    selected={this.state.startDate}\n                                    locale={ko}\n                                    dateFormat=\"yyyy-MM-dd\"\n                                    placeholderText=\"시작일:0000-00-00\"/>\n                        <div style={{width:'2%' }}/>\n                        ~\n                        <div style={{width:'2%' }}/>\n                        <DatePicker style={{width:'8%', textAlign:'center'}}\n                                    name='endDate'\n                                    onChange={this.onEndDateChanged}\n                                    selected={this.state.endDate}\n                                    locale={ko}\n                                    dateFormat=\"yyyy-MM-dd\"\n                                    placeholderText=\"종료일:0000-00-00\"/>\n                    </div>\n\n                    <div style={{\n                        width: '100%',\n                        marginTop: 20,\n                        fontSize: 18,\n                        display:'flex'\n                    }}>\n                        <div style={{width:'5%' }}/>\n                        <div style={{width:'15%', textAlign:'center'}} />\n                        <div style={{width: '80%', display:'flex'}}>\n                            <CheckboxTarget\n                                name={\"targetChosun\"}\n                                width={100}\n                                text={\"조선일보\"}\n                                checked={this.state.targetChosun}\n                                onChanged={this.onTargetChanged}\n                            />\n                            <div style={{width:'3%' }}/>\n                            <CheckboxTarget\n                                name={\"targetDonga\"}\n                                width={100}\n                                text={\"동아일보\"}\n                                checked={this.state.targetDonga}\n                                onChanged={this.onTargetChanged}\n                            />\n                            <div style={{width:'3%' }}/>\n                            <CheckboxTarget\n                                name={\"targetJoongang\"}\n                                width={100}\n                                text={\"중앙일보\"}\n                                checked={this.state.targetJoongang}\n                                onChanged={this.onTargetChanged}\n                            />\n                        </div>\n                    </div>\n\n                    <div style={{\n                        width: '100%',\n                        marginTop: 20,\n                        fontSize: 18,\n                        display:'flex'\n                    }}>\n                        <div style={{width:'5%' }}/>\n                        <div style={{width:'15%', textAlign:'center'}} />\n                        <div style={{width: '80%', display:'flex'}}>\n                            <CheckboxTarget\n                                name={\"targetTweeter\"}\n                                width={100}\n                                text={\"트위터\"}\n                                checked={this.state.targetTweeter}\n                                onChanged={this.onTargetChanged}\n                            />\n                            <div style={{width:'3%' }}/>\n                            <CheckboxTarget\n                                name={\"targetFacebook\"}\n                                width={100}\n                                text={\"페이스북\"}\n                                checked={this.state.targetFacebook}\n                                onChanged={this.onTargetChanged}\n                            />\n                        </div>\n                    </div>\n\n                    <div style={{\n                        width: '100%',\n                        marginTop: 20,\n                        fontSize: 18,\n                        display:'flex'\n                    }}>\n                        <div style={{width:'5%' }}/>\n                        <div style={{width:'15%', textAlign:'center'}} />\n                        <div style={{width: '80%', display:'flex'}}>\n                            <CheckboxTarget\n                                name={\"targetNaverBlog\"}\n                                width={150}\n                                text={\"네이버 블로그\"}\n                                checked={this.state.targetNaverBlog}\n                                onChanged={this.onTargetChanged}\n                            />\n                        </div>\n                    </div>\n\n                    <ButtonControlPopup width={120} height={40} backgroundColor={'#0099FF'} onClick={this.onSubmit} text={'등록하기'}  />\n                    <ButtonControlPopup width={80} height={40} backgroundColor={'#ACACAC'} onClick={this.props.handleClose} text={'취소'} marginLeft={10} />\n\n                </div>\n            </div>\n\n        );\n    }\n}\nexport default PopupWorkCreate;\n","/home/zhkim/github/whateverdot/whateverdot/manager/src/components/Header.js",[],"/home/zhkim/github/whateverdot/whateverdot/manager/src/components/WorkTable.js",[],"/home/zhkim/github/whateverdot/whateverdot/manager/src/components/ButtonCreateWork.js",[],"/home/zhkim/github/whateverdot/whateverdot/manager/src/components/CheckboxTarget.js",[],"/home/zhkim/github/whateverdot/whateverdot/manager/src/components/PopupWorkDetail.js",["74","75","76","77"],"import React from \"react\"\nimport '../App.css';\nimport * as R from \"../Resources\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport ProgressStateTextBox from \"./ProgressStateTextBox\";\nimport WorkItem from \"./WorkItem\";\n\nconst moment = require('moment');\nclass PopupWorkDetail extends React.Component {\n\n    constructor(props) {\n\n        // console.log('constructor')\n        super(props);\n        this.handleMouseHover = this.handleMouseHover.bind(this);\n        this.handleMouseLeave = this.handleMouseLeave.bind(this);\n\n        this.state = {\n            list: [],\n            opacity: 1.0,\n            item: props.item,\n            log: ''\n        };\n        // this.textLog = React.createRef();\n\n\n    }\n\n    handleMouseHover(e) { this.setState(this.toggleHoverState); }\n    handleMouseLeave(e) { this.setState(this.toggleLeaveState); }\n    toggleHoverState(e) { return { opacity: 0.5 }; }\n    toggleLeaveState(e) { return { opacity: 1.0 }; }\n\n    updateName=() => {\n\n        const request = async () => {\n\n            // console.log('보자보자')\n            // console.log(this.state.item)\n            let data = {\n                group_id: this.state.item.group_id,\n                name: this.state.item.name\n            };\n\n            // console.log(data);\n\n            const response = await axios.post('http://localhost:3030/update_work_group_name', data);\n            if(response.status !== 200) {\n                alert('요청한 작업을 수행할 수 없습니다.');\n            } else {\n                alert('처리되었습니다.')\n            }\n        };\n        request()\n    };\n\n    onNameChanged = (d) => {\n        this.state.item.name = d.target.value;\n        this.setState({\n            item: this.state.item,\n        })\n    };\n\n    componentDidMount() {\n        this.update();\n        this.timerID = setInterval(\n            () => this.tick(),\n            1000\n        );\n\n        this.updateID = setInterval(\n            () => this.update(),\n            10000\n        );\n    }\n\n    getWorkStateList = () => {\n\n        let data = {\n            group_id: this.state.item.group_id\n        };\n\n        axios.post('http://localhost:3030/get_work_state_list', data).then( (response) => {\n            const list = response.data.list;\n            this.setState({list: list});\n            console.log(list[0])\n        });\n    };\n\n    tick() {\n        this.setState({\n            date: new Date()\n        });\n\n        let item = this.state.item;\n        if(item.current_state === R.STATE_PROCESSING) {\n            item.running_time = item.running_time + 1;\n\n        }\n        this.setState({item: item})\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n        clearInterval(this.updateID);\n    }\n\n    update() {\n\n        this.getWorkStateList()\n\n        axios.post('http://localhost:3030/get_work_group', {\n            group_id: this.state.item.group_id\n        }).then((response) => {\n            let oldItem = this.state.item;\n            let newItem = response.data.list[0];\n\n            if (oldItem.current_state === R.STATE_PROCESSING && newItem.current_state === R.STATE_PROCESSING) {\n                if (oldItem.group_id === newItem.group_id) {\n                    oldItem.current_work_count = newItem.current_work_count;\n                    oldItem.total_work_count = newItem.total_work_count;\n                    oldItem.running_time = newItem.running_time;\n                    oldItem = newItem;\n                }\n            }\n\n            this.setState({item: oldItem})\n        });\n    }\n\n    componentDidUpdate() {\n        // this.textLog.current.scrollTop = this.textLog.current.scrollHeight;\n    }\n\n    onLogChanged = (d) => {\n        this.state.log += '\\n' + d.target.value;\n        this.setState({\n            log: this.state.log,\n        })\n    };\n\n    renderProgressStateTextBox() {\n        return <ProgressStateTextBox\n            value={this.state.item.current_state}\n        />;\n    }\n\n    render() {\n\n        let tmpKwdSet = [\n            { keyword: this.state.item.keyword1, opt: this.state.item.keyword_opt1},\n            { keyword: this.state.item.keyword2, opt: this.state.item.keyword_opt2},\n            { keyword: this.state.item.keyword3, opt: this.state.item.keyword_opt3},\n            { keyword: this.state.item.keyword4, opt: this.state.item.keyword_opt4},\n            { keyword: this.state.item.keyword5, opt: this.state.item.keyword_opt5} ];\n\n        let kwdKeySet = [ tmpKwdSet[0].keyword ];\n\n        for (let i=1; i<tmpKwdSet.length; i++) {\n\n            const kwdKeySetSize = kwdKeySet.length;\n            const kwdFormat = tmpKwdSet[i];\n            if(kwdFormat.keyword === undefined || kwdFormat.keyword === '') continue;\n\n            if(kwdFormat.opt === 'and') {\n                for (let k=0; k<kwdKeySetSize; k++) {\n                    const keyword = kwdKeySet[k];\n                    if(keyword === undefined || keyword === '') continue;\n                    kwdKeySet[k] = keyword + ' ' + kwdFormat.keyword;\n                }\n            }\n\n            if(kwdFormat.opt === 'or') {\n                for (let k=0; k<kwdKeySetSize; k++) {\n                    const keyword = kwdKeySet[k];\n                    if(keyword === undefined || keyword === '') continue;\n                    kwdKeySet.push(keyword + ' ' + kwdFormat.keyword);\n                    kwdKeySet.push(kwdFormat.keyword);\n                }\n            }\n        }\n\n        let keywords = '';\n        for (let i=0; i<kwdKeySet.length; i++) {\n            keywords += kwdKeySet[i] + ( i === (kwdKeySet.length-1) ? '': '\\u00A0,\\u00A0\\u00A0\\u00A0');\n        }\n\n        let targets = '';\n        const collectTarget = this.state.item.collect_target.split('/');\n        for(let i=0; i<collectTarget.length; i++) {\n            const name = collectTarget[i];\n            if(name === undefined || name === '') continue;\n            targets += R.CollectTargetName[collectTarget[i]] + \"\\u00A0\\u00A0\\u00A0\\u00A0\";\n        }\n\n        const secs = this.state.item.running_time;\n\n        const hourNum = Math.floor(secs / 3600);\n        const hourMod = secs % 3600;\n        const minuteNum = Math.floor(hourMod / 60);\n        const minuteMod = hourMod % 60;\n\n        const hour   = (hourNum < 10 ? '0':'') + hourNum;\n        const minute = (minuteNum < 10 ? '0':'') + minuteNum;\n        const second = (minuteMod < 10 ? '0':'') + minuteMod;\n\n\n        let no = 1;\n        const listItems = this.state.list.map((item) =>\n             <div style={{width: '100%', display: 'flex', height:'50px'}}>\n                 <div style={{width: '5%', color:'#aaaaaa'}}>{no++}</div>\n                 <div style={{width: '8%', color:'#aaaaaa'}}>{R.CollectTargetName[item.site_type]}</div>\n                 <div style={{width: '22%'}}>{item.keyword}</div>\n                 <div style={{ width: '20%', color: '#666666' }}>\n                     <label style={{color:'#0099ff', fontSize:18}}>{item.total_work_count}</label>건&nbsp;중\n                     &nbsp;&nbsp;<label style={{color:'#a9d18e', fontSize:16}}>{item.finished_work_count}</label>\n                     &nbsp;건&nbsp;완료\n                 </div>\n\n\n                 <div style={{width: '10%'}}>{\n\n                     item.total_work_count > 0 ?\n\n                         (item.finished_work_count > item.total_work_count ?\n                             100:Math.floor(item.finished_work_count*100/item.total_work_count)) : 0\n\n                 }%</div>\n                 <div style={{width: '15%'}}><ProgressStateTextBox value={item.current_state}/></div>\n             </div>\n         );\n\n        return (\n            <div style={{\n                position: 'fixed',\n                background: '#00000044',\n                width: '100%',\n                height: '120vh',\n                top: 0,\n                left: 0\n            }}>\n\n                <div style={{\n                    position: 'relative',\n                    width: '80%',\n                    margin: '0 auto',\n                    height: 'auto',\n                    maxHeight: 100,\n                    marginTop: 'calc(100vh - 85vh - 20px)',\n                    background: '#000000',\n                    // paddingLeft: 20,\n                    // paddingRight: 20,\n                    paddingTop: 10,\n                    paddingBottom: 12,\n                    borderTop: '1px solid #999',\n                    borderLeft: '1px solid #999',\n                    borderRight: '1px solid #999',\n                    overflow: 'auto',\n                    display: 'flex'\n                }}>\n                    <div style={{fontSize: 20}}>&nbsp;&nbsp;&nbsp;&nbsp;상세 보기</div>\n                    <div style={{\n                        position: 'absolute',\n                        width: '100%',\n                        textAlign: 'right'}}>\n                        <div style={{\n                            cursor: 'pointer',\n                            display:'inline-block',\n                            width:30, height: 20,\n                            paddingTop: 5, paddingRight: 14, opacity: this.state.opacity}}\n                             onMouseEnter={this.handleMouseHover}\n                             onMouseLeave={this.handleMouseLeave}\n                             onClick={ this.props.handleClose }>\n                            <img src={R.Images['close']}/>\n                        </div>\n                    </div>\n                </div>\n                <div style={{\n                    position: 'relative',\n                    width: '80%',\n                    margin: '0 auto',\n                    height: '52%',\n                    background: '#212121',\n                    borderLeft: '1px solid #999',\n                    borderRight: '1px solid #999',\n                    borderBottom: '1px solid #999',\n                    overflow: 'auto',\n                }}>\n\n                    <div style={{\n                        width: '100%',\n                        marginTop: 40,\n                        fontSize: 18,\n                        display:'flex'\n                    }}>\n                        <div style={{width:'5%' }}/>\n                        <div style={{width:'15%', textAlign:'center'}}>작업이름</div>\n                        <input style={{width: '50%'}} type='text' onChange={this.onNameChanged} value={this.state.item.name}/>\n                        <div style={{width:10 }}/>\n                        <button style={{\n                            width:50, fontSize:14, cursor:'pointer',\n                            backgroundColor:'#0099FF', color: '#FFFFFF', border:'0px'}}\n                                onClick={this.updateName}>수정\n                        </button>\n                    </div>\n\n                    <div style={{\n                        width: '100%',\n                        marginTop: 40,\n                        fontSize: 18,\n                        display:'flex'\n                    }}>\n                        <div style={{width:'5%' }}/>\n                        <div style={{width:'15%', textAlign:'center'}}>키워드</div>\n                        <div style={{width:'70%', color:'#aaaaaa', textAlign:'left', wordWrap: 'break-word'}}>\n                            {keywords}\n                        </div>\n                    </div>\n\n                    <div style={{\n                        width: '100%',\n                        marginTop: 40,\n                        fontSize: 18,\n                        display:'flex'\n                    }}>\n                        <div style={{width:'5%' }}/>\n                        <div style={{width:'15%', textAlign:'center'}}>수집기간</div>\n                        <div style={{display:'flex', color:'#aaaaaa'}}>{moment(this.state.item.start_date).format('YYYY-MM-DD')}&nbsp;~&nbsp;{moment(this.state.item.end_date).format('YYYY-MM-DD')}</div>\n                </div>\n\n                    <div style={{\n                        width: '100%',\n                        marginTop: 40,\n                        fontSize: 18,\n                        display:'flex'\n                    }}>\n                        <div style={{width:'5%' }}/>\n                        <div style={{width:'15%', textAlign:'center'}}>수집대상</div>\n                        <div style={{width:'70%', color:'#aaaaaa', textAlign:'left', wordWrap: 'break-word'}}>{targets}</div>\n                    </div>\n\n                    <div style={{\n                        width: '100%',\n                        marginTop: 40,\n                        fontSize: 18,\n                        display:'flex'\n                    }}>\n                        <div style={{width:'5%' }}/>\n                        <div style={{width:'15%', textAlign:'center'}}>진행상태</div>\n                        {this.renderProgressStateTextBox()}\n                        <div>\n\n                            <div style={{ marginLeft: 20, textAlign:'left', fontSize:14, color: '#666666' }}>\n                                <label style={{color:'#ff9e01', fontSize:16}}>{hour}:{minute}:{second}</label>&nbsp;&nbsp;경과\n                            </div>\n                            <div style={{ marginLeft: 20, textAlign:'left', fontSize:14, color: '#666666' }}>\n                                <label style={{color:'#0099ff', fontSize:18}}>{this.state.item.total_work_count}</label>건&nbsp;중\n                                &nbsp;&nbsp;<label style={{color:'#a9d18e', fontSize:16}}>{this.state.item.current_work_count}</label>\n                                &nbsp;건&nbsp;완료\n                            </div>\n                        </div>\n\n                    </div>\n\n                    <div style={{\n                        width: '100%',\n                        marginTop: 8,\n                        fontSize: 18,\n                        display:'flex'\n                    }}>\n                        <div style={{width:'5%' }}/>\n                        <div style={{width:'15%', textAlign:'center'}}></div>\n                        <div style={{fontSize: 14, textAlign:'left', display:'flex', color:'#aaaaaa'}}>(&nbsp;수집경로:&nbsp;&nbsp;&nbsp;<label style={{color:'#0099FF'}}>{'C:\\\\User\\\\JHKim\\\\Desktop\\\\DATA'}</label>&nbsp;&nbsp;)</div>\n                    </div>\n\n                    <div style={{\n                        width: '100%',\n                        marginTop: 40,\n                        fontSize: 18,\n                        display:'flex'\n                    }}>\n                        <div style={{width:'5%' }}/>\n                        <div style={{width:'15%', textAlign:'center'}}></div>\n                        <div style={{width: '80%'}}>\n                            {listItems}\n                        </div>\n                        {/*<textarea ref={this.textLog} style={{width:'70%', height:200, resize:'none'}} readOnly={true} value={this.state.log} onChange={this.onLogChanged}/>*/}\n                    </div>\n\n                </div>\n            </div>\n\n        );\n    }\n}\nexport default PopupWorkDetail;\n","/home/zhkim/github/whateverdot/whateverdot/manager/src/components/WorkItem.js",["78","79"],"/home/zhkim/github/whateverdot/whateverdot/manager/src/components/ProgressStateTextBox.js",[],"/home/zhkim/github/whateverdot/whateverdot/manager/src/components/ButtonControl.js",["80"],"import React from \"react\";\nimport * as R from \"../Resources\";\n\nclass ButtonControl extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleMouseHover = this.handleMouseHover.bind(this);\n        this.handleMouseLeave = this.handleMouseLeave.bind(this);\n        this.state = {\n            opacity: 1.0,\n        };\n    }\n\n    handleMouseHover() { this.setState(this.toggleHoverState); }\n    handleMouseLeave() { this.setState(this.toggleLeaveState); }\n\n    toggleHoverState(state) { return { opacity: 0.5 }; }\n    toggleLeaveState(state) { return { opacity: 1.0 }; }\n\n    update() {\n        const expression = R.StateExpression[this.props.value];\n        this.expression.label = expression.label;\n        this.expression.backgroundColor = expression.backgroundColor;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    render() {\n\n        let iconSrc = R.Images[this.props.value] + '.svg';\n        if(this.props.currentState === R.STATE_WAITING) {\n            if(this.props.value === R.STATE_PAUSED || this.props.value === R.STATE_STOPPED) {\n                iconSrc = R.Images[this.props.value] + '_disabled.svg';\n            }\n            if(this.props.value === R.STATE_PROCESSING) {\n                iconSrc = R.Images[R.STATE_PROCESSING] + '.svg';\n            }\n        }\n\n        if(this.props.currentState === R.STATE_PROCESSING) {\n            if(this.props.value === R.STATE_PROCESSING || this.props.value === R.STATE_TERMINATED) {\n                iconSrc = R.Images[this.props.value] + '_disabled.svg';\n            }\n        }\n\n        if(this.props.currentState === R.STATE_PAUSED) {\n            if(this.props.value === R.STATE_PAUSED || this.props.value === R.STATE_TERMINATED) {\n                iconSrc = R.Images[this.props.value] + '_disabled.svg';\n            }\n        }\n\n        if(this.props.currentState === R.STATE_STOPPED) {\n            if(this.props.value === R.STATE_STOPPED || this.props.value === R.STATE_PAUSED) {\n                iconSrc = R.Images[this.props.value] + '_disabled.svg';\n            }\n        }\n\n        if(this.props.currentState === R.STATE_FINISHED) {\n            if(this.props.value === R.STATE_PROCESSING || this.props.value === R.STATE_STOPPED || this.props.value === R.STATE_PAUSED) {\n                iconSrc = R.Images[this.props.value] + '_disabled.svg';\n            }\n            if(this.props.value === R.STATE_FINISHED) {\n                iconSrc = R.Images[R.STATE_FINISHED] + '.svg';\n            }\n        }\n\n        return (\n            <div\n                style={\n                    {\n                        width: 30,\n                        height: 30,\n                        border: '0px',\n                        position: 'relative',\n                        opacity: this.state.opacity,\n                        cursor: 'pointer',\n                    }\n                }\n                onMouseEnter={this.handleMouseHover}\n                onMouseLeave={this.handleMouseLeave}\n                onClick={(e) => {\n                    this.props.onClick();\n                    e.stopPropagation();\n                }}>\n                <img\n                    src={ iconSrc }\n                    style={{\n                        width:20,\n                        height: 20,\n                        position: 'absolute',\n                        top: '50%',\n                        left: '50%',\n                        transform: 'translate(-50%, -50%)'\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nexport default ButtonControl;",{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":2,"column":17,"nodeType":"87","messageId":"88","endLine":2,"endColumn":25},{"ruleId":"85","severity":1,"message":"89","line":4,"column":13,"nodeType":"87","messageId":"88","endLine":4,"endColumn":14},{"ruleId":"90","severity":1,"message":"91","line":48,"column":21,"nodeType":"92","endLine":51,"endColumn":47},{"ruleId":"85","severity":1,"message":"86","line":1,"column":16,"nodeType":"87","messageId":"88","endLine":1,"endColumn":24},{"ruleId":"85","severity":1,"message":"93","line":4,"column":38,"nodeType":"87","messageId":"88","endLine":4,"endColumn":54},{"ruleId":"94","severity":1,"message":"95","line":108,"column":9,"nodeType":"96","messageId":"97","endLine":108,"endColumn":19},{"ruleId":"94","severity":1,"message":"95","line":109,"column":9,"nodeType":"96","messageId":"97","endLine":109,"endColumn":19},{"ruleId":"90","severity":1,"message":"91","line":259,"column":29,"nodeType":"92","endLine":259,"endColumn":59},{"ruleId":"85","severity":1,"message":"98","line":7,"column":8,"nodeType":"87","messageId":"88","endLine":7,"endColumn":16},{"ruleId":"94","severity":1,"message":"95","line":59,"column":9,"nodeType":"96","messageId":"97","endLine":59,"endColumn":24},{"ruleId":"94","severity":1,"message":"95","line":137,"column":9,"nodeType":"96","messageId":"97","endLine":137,"endColumn":19},{"ruleId":"90","severity":1,"message":"91","line":275,"column":29,"nodeType":"92","endLine":275,"endColumn":59},{"ruleId":"85","severity":1,"message":"99","line":6,"column":9,"nodeType":"87","messageId":"88","endLine":6,"endColumn":26},{"ruleId":"94","severity":1,"message":"95","line":31,"column":9,"nodeType":"96","messageId":"97","endLine":31,"endColumn":19},{"ruleId":"90","severity":1,"message":"91","line":88,"column":17,"nodeType":"92","endLine":98,"endColumn":19},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'R' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setDefaultLocale' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","'WorkItem' is defined but never used.","'CollectTargetName' is defined but never used.","no-global-assign","no-unsafe-negation"]