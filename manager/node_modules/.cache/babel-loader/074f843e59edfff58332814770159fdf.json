{"ast":null,"code":"var _jsxFileName = \"/home/zhkim/github/whateverdot/whateverdot/manager/src/components/ButtonControl.js\";\nimport React from \"react\";\nimport * as R from \"../Resources\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ButtonControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleMouseHover = this.handleMouseHover.bind(this);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\n    this.state = {\n      opacity: 1.0\n    };\n  }\n\n  handleMouseHover() {\n    this.setState(this.toggleHoverState);\n  }\n\n  handleMouseLeave() {\n    this.setState(this.toggleLeaveState);\n  }\n\n  toggleHoverState(state) {\n    return {\n      opacity: 0.5\n    };\n  }\n\n  toggleLeaveState(state) {\n    return {\n      opacity: 1.0\n    };\n  }\n\n  update() {\n    const expression = R.StateExpression[this.props.value];\n    this.expression.label = expression.label;\n    this.expression.backgroundColor = expression.backgroundColor;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {}\n\n  render() {\n    let iconSrc = R.Images[this.props.value] + '.svg';\n\n    if (this.props.currentState === R.STATE_WAITING) {\n      if (this.props.value === R.STATE_PAUSED || this.props.value === R.STATE_STOPPED) {\n        iconSrc = R.Images[this.props.value] + '_disabled.svg';\n      }\n\n      if (this.props.value === R.STATE_PROCESSING) {\n        iconSrc = R.Images[R.STATE_PROCESSING] + '.svg';\n      }\n    }\n\n    if (this.props.currentState === R.STATE_PROCESSING) {\n      if (this.props.value === R.STATE_PROCESSING || this.props.value === R.STATE_TERMINATED) {\n        iconSrc = R.Images[this.props.value] + '_disabled.svg';\n      }\n    }\n\n    if (this.props.currentState === R.STATE_PAUSED) {\n      if (this.props.value === R.STATE_PAUSED || this.props.value === R.STATE_TERMINATED) {\n        iconSrc = R.Images[this.props.value] + '_disabled.svg';\n      }\n    }\n\n    if (this.props.currentState === R.STATE_STOPPED) {\n      if (this.props.value === R.STATE_STOPPED || this.props.value === R.STATE_PAUSED) {\n        iconSrc = R.Images[this.props.value] + '_disabled.svg';\n      }\n    }\n\n    if (this.props.currentState === R.STATE_FINISHED) {\n      if (this.props.value === R.STATE_PROCESSING || this.props.value === R.STATE_STOPPED || this.props.value === R.STATE_PAUSED) {\n        iconSrc = R.Images[this.props.value] + '_disabled.svg';\n      }\n\n      if (this.props.value === R.STATE_FINISHED) {\n        iconSrc = R.Images[R.STATE_FINISHED] + '.svg';\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 30,\n        height: 30,\n        border: '0px',\n        position: 'relative',\n        opacity: this.state.opacity,\n        cursor: 'pointer'\n      },\n      onMouseEnter: this.handleMouseHover,\n      onMouseLeave: this.handleMouseLeave,\n      onClick: e => {\n        this.props.onClick();\n        e.stopPropagation();\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: iconSrc,\n        style: {\n          width: 20,\n          height: 20,\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ButtonControl;","map":{"version":3,"sources":["/home/zhkim/github/whateverdot/whateverdot/manager/src/components/ButtonControl.js"],"names":["React","R","ButtonControl","Component","constructor","props","handleMouseHover","bind","handleMouseLeave","state","opacity","setState","toggleHoverState","toggleLeaveState","update","expression","StateExpression","value","label","backgroundColor","componentDidUpdate","prevProps","prevState","snapshot","render","iconSrc","Images","currentState","STATE_WAITING","STATE_PAUSED","STATE_STOPPED","STATE_PROCESSING","STATE_TERMINATED","STATE_FINISHED","width","height","border","position","cursor","e","onClick","stopPropagation","top","left","transform"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as R from \"../Resources\";\n\nclass ButtonControl extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleMouseHover = this.handleMouseHover.bind(this);\n        this.handleMouseLeave = this.handleMouseLeave.bind(this);\n        this.state = {\n            opacity: 1.0,\n        };\n    }\n\n    handleMouseHover() { this.setState(this.toggleHoverState); }\n    handleMouseLeave() { this.setState(this.toggleLeaveState); }\n\n    toggleHoverState(state) { return { opacity: 0.5 }; }\n    toggleLeaveState(state) { return { opacity: 1.0 }; }\n\n    update() {\n        const expression = R.StateExpression[this.props.value];\n        this.expression.label = expression.label;\n        this.expression.backgroundColor = expression.backgroundColor;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    render() {\n\n        let iconSrc = R.Images[this.props.value] + '.svg';\n        if(this.props.currentState === R.STATE_WAITING) {\n            if(this.props.value === R.STATE_PAUSED || this.props.value === R.STATE_STOPPED) {\n                iconSrc = R.Images[this.props.value] + '_disabled.svg';\n            }\n            if(this.props.value === R.STATE_PROCESSING) {\n                iconSrc = R.Images[R.STATE_PROCESSING] + '.svg';\n            }\n        }\n\n        if(this.props.currentState === R.STATE_PROCESSING) {\n            if(this.props.value === R.STATE_PROCESSING || this.props.value === R.STATE_TERMINATED) {\n                iconSrc = R.Images[this.props.value] + '_disabled.svg';\n            }\n        }\n\n        if(this.props.currentState === R.STATE_PAUSED) {\n            if(this.props.value === R.STATE_PAUSED || this.props.value === R.STATE_TERMINATED) {\n                iconSrc = R.Images[this.props.value] + '_disabled.svg';\n            }\n        }\n\n        if(this.props.currentState === R.STATE_STOPPED) {\n            if(this.props.value === R.STATE_STOPPED || this.props.value === R.STATE_PAUSED) {\n                iconSrc = R.Images[this.props.value] + '_disabled.svg';\n            }\n        }\n\n        if(this.props.currentState === R.STATE_FINISHED) {\n            if(this.props.value === R.STATE_PROCESSING || this.props.value === R.STATE_STOPPED || this.props.value === R.STATE_PAUSED) {\n                iconSrc = R.Images[this.props.value] + '_disabled.svg';\n            }\n            if(this.props.value === R.STATE_FINISHED) {\n                iconSrc = R.Images[R.STATE_FINISHED] + '.svg';\n            }\n        }\n\n        return (\n            <div\n                style={\n                    {\n                        width: 30,\n                        height: 30,\n                        border: '0px',\n                        position: 'relative',\n                        opacity: this.state.opacity,\n                        cursor: 'pointer',\n                    }\n                }\n                onMouseEnter={this.handleMouseHover}\n                onMouseLeave={this.handleMouseLeave}\n                onClick={(e) => {\n                    this.props.onClick();\n                    e.stopPropagation();\n                }}>\n                <img\n                    src={ iconSrc }\n                    style={{\n                        width:20,\n                        height: 20,\n                        position: 'absolute',\n                        top: '50%',\n                        left: '50%',\n                        transform: 'translate(-50%, -50%)'\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nexport default ButtonControl;"]},"metadata":{},"sourceType":"module"}