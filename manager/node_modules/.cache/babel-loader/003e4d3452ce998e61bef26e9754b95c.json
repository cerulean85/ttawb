{"ast":null,"code":"var _jsxFileName = \"/home/zhkim/github/whateverdot/whateverdot/manager/src/components/WorkItem.js\";\nimport React from \"react\";\nimport ProgressStateTextBox from \"./ProgressStateTextBox\";\nimport ButtonControl from \"./ButtonControl\";\nimport * as R from \"../Resources\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass WorkItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      item: props.value,\n      opacity: 1.0,\n      backgroundColor: '#212121'\n    };\n    this.handleMouseHover = this.handleMouseHover.bind(this);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this); // console.log(this.state.item)\n  }\n\n  handleMouseHover() {\n    this.setState(this.toggleHoverState);\n  }\n\n  handleMouseLeave() {\n    this.setState(this.toggleLeaveState);\n  }\n\n  toggleHoverState(state) {\n    return {\n      opacity: 0.5,\n      backgroundColor: '#323232'\n    };\n  }\n\n  toggleLeaveState(state) {\n    return {\n      opacity: 1.0,\n      backgroundColor: '#212121'\n    };\n  }\n\n  attach() {\n    // const currentState = this.state.item.current_state;\n    // if(currentState === 'processing') {\n    //     alert('수집이 진행 중입니다.');\n    //     return;\n    // }\n    const request = async () => {\n      let data = {\n        gid: this.state.item.id\n      };\n      const response = await axios.post('http://localhost:3001/action/attach_work', data);\n\n      if (response.status !== 200) {\n        alert('요청한 작업을 수행할 수 없습니다.');\n      } else {\n        // alert('처리되었습니다.');\n        this.setState({\n          value: R.STATE_PROCESSING\n        });\n        window.location.reload();\n      }\n    };\n\n    request();\n  }\n\n  play() {\n    // const currentState = this.state.item.current_state;\n    // if(currentState === 'processing') {\n    //     alert('수집이 진행 중입니다.');\n    //     return;\n    // }\n    const request = async () => {\n      let data = {\n        gid: this.state.item.id\n      };\n      const response = await axios.post('http://localhost:3001/action/attach_work', data);\n\n      if (response.status !== 200) {\n        alert('요청한 작업을 수행할 수 없습니다.');\n      } else {\n        // alert('처리되었습니다.');\n        this.setState({\n          value: R.STATE_PROCESSING\n        });\n        window.location.reload();\n      }\n    };\n\n    request();\n  }\n\n  pause() {\n    const currentState = this.state.item.current_state;\n\n    if (currentState !== 'processing') {\n      alert('수집이 진행 상태가 아닐 때는 사용할 수 없습니다.');\n      return;\n    }\n\n    const request = async () => {\n      let data = {\n        group_id: this.state.item.group_id\n      };\n      const response = await axios.post('http://localhost:3030/pause_work', data);\n\n      if (response.status !== 200) {\n        alert('요청한 작업을 수행할 수 없습니다.');\n      } else {\n        // alert('처리되었습니다.');\n        this.setState({\n          value: R.STATE_PAUSED\n        });\n        window.location.reload();\n      }\n    };\n\n    request();\n  }\n\n  stop() {\n    const currentState = this.state.item.current_state;\n\n    if (currentState === 'stopped') {\n      return;\n    }\n\n    const request = async () => {\n      let data = {\n        group_id: this.state.item.group_id\n      };\n      const response = await axios.post('http://localhost:3030/stop_work', data);\n\n      if (response.status !== 200) {\n        alert('요청한 작업을 수행할 수 없습니다.');\n      } else {\n        // alert('처리되었습니다.');\n        this.setState({\n          value: R.STATE_STOPPED\n        });\n        window.location.reload();\n      }\n    };\n\n    request();\n  }\n\n  finish() {\n    const request = async () => {\n      let data = {\n        group_id: this.state.item.group_id\n      };\n      const response = await axios.post('http://localhost:3030/finish_work', data);\n\n      if (response.status !== 200) {\n        alert('요청한 작업을 수행할 수 없습니다.');\n      } else {\n        // alert('처리되었습니다.');\n        this.setState({\n          value: R.STATE_FINISHED\n        });\n        window.location.reload();\n      }\n    };\n\n    request();\n  }\n\n  terminate() {\n    const currentState = this.state.item.current_state;\n\n    if (currentState === R.STATE_PROCESSING) {\n      alert('수집이 진행 중인 작업은 제거할 수 없습니다.');\n      return;\n    }\n\n    if (window.confirm('선택한 작업을 제거하시겠습니까?')) {\n      const request = async () => {\n        let data = {\n          group_id: this.state.item.group_id\n        };\n        const response = await axios.post('http://localhost:3030/terminate_work', data);\n\n        if (response.status !== 200) {\n          alert('요청한 작업을 수행할 수 없습니다.');\n        } else {\n          this.setState({\n            value: R.STATE_TERMINATED\n          });\n          window.location.reload();\n        }\n      };\n\n      request();\n    }\n  }\n\n  error() {\n    this.setState({\n      value: R.STATE_ERROR\n    });\n  }\n\n  renderProgressStateTextBox() {\n    // alert(this.state.item.work_state)\n    return /*#__PURE__*/_jsxDEV(ProgressStateTextBox, {\n      value: this.state.item.work_state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 16\n    }, this);\n  }\n\n  renderButtonProcess() {\n    return /*#__PURE__*/_jsxDEV(ButtonControl, {\n      value: R.STATE_PROCESSING,\n      currentState: this.state.item.work_state,\n      groupdId: this.state.item.work_group_no,\n      onClick: () => this.play()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 16\n    }, this);\n  } // renderButtonPause() {\n  //     return <ButtonControl\n  //         value={R.STATE_PAUSED}\n  //         currentState = {this.state.item.work_state}\n  //         groupdId = {this.state.item.work_group_no}\n  //         onClick={()=> this.pause()}\n  //     />\n  // }\n\n\n  renderButtonStop() {\n    return /*#__PURE__*/_jsxDEV(ButtonControl, {\n      value: R.STATE_STOPPED,\n      currentState: this.state.item.work_state,\n      groupdId: this.state.item.work_group_no,\n      onClick: () => this.stop()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 16\n    }, this);\n  } // renderButtonTerminate() {\n  //     return <ButtonControl\n  //         value={R.STATE_TERMINATED}\n  //         currentState = {this.state.item.current_state}\n  //         groupdId = {this.state.item.group_id}\n  //         onClick={()=> this.terminate()}\n  //     />\n  // }\n  //\n  // renderButtonFinish() {\n  //     return <ButtonControl\n  //         value={R.STATE_FINISHED}\n  //         currentState = {this.state.item.current_state}\n  //         groupdId = {this.state.item.group_id}\n  //         onClick={()=> this.finish()}\n  //     />\n  // }\n\n\n  render() {\n    const secs = this.state.item.view_running_time;\n    const hourNum = Math.floor(secs / 3600);\n    const hourMod = secs % 3600;\n    const minuteNum = Math.floor(hourMod / 60);\n    const minuteMod = hourMod % 60;\n    const hour = (hourNum < 10 ? '0' : '') + hourNum;\n    const minute = (minuteNum < 10 ? '0' : '') + minuteNum;\n    const second = (minuteMod < 10 ? '0' : '') + minuteMod;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onMouseEnter: this.handleMouseHover,\n      onMouseLeave: this.handleMouseLeave,\n      onClick: e => {\n        this.props.openPopup();\n      },\n      style: {\n        position: 'relative',\n        width: '100%',\n        height: 130,\n        backgroundColor: this.state.backgroundColor,\n        borderBottom: '1px solid black',\n        display: 'flex',\n        cursor: 'pointer'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: '20%',\n            left: '2%',\n            display: 'flex'\n          },\n          children: [this.renderProgressStateTextBox(), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              paddingTop: 6,\n              paddingLeft: 20,\n              fontSize: 16,\n              color: '#666666'\n            },\n            children: [\"\\uACBD\\uACFC:\\xA0\", /*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                color: '#ff9e01',\n                fontSize: 18\n              },\n              children: [hour, \":\", minute, \":\", second]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: '58%',\n            left: '2%',\n            display: 'flex',\n            fontSize: '16pt'\n          },\n          children: this.state.item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          // float: 'right',\n          position: 'absolute',\n          top: '50%',\n          left: '86%',\n          transform: 'translate(-20%, -50%)',\n          display: 'flex'\n        },\n        children: [this.renderButtonProcess(), \"\\xA0\\xA0\", this.renderButtonStop(), \"\\xA0\\xA0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default WorkItem;","map":{"version":3,"sources":["/home/zhkim/github/whateverdot/whateverdot/manager/src/components/WorkItem.js"],"names":["React","ProgressStateTextBox","ButtonControl","R","axios","WorkItem","Component","constructor","props","state","item","value","opacity","backgroundColor","handleMouseHover","bind","handleMouseLeave","setState","toggleHoverState","toggleLeaveState","attach","request","data","gid","id","response","post","status","alert","STATE_PROCESSING","window","location","reload","play","pause","currentState","current_state","group_id","STATE_PAUSED","stop","STATE_STOPPED","finish","STATE_FINISHED","terminate","confirm","STATE_TERMINATED","error","STATE_ERROR","renderProgressStateTextBox","work_state","renderButtonProcess","work_group_no","renderButtonStop","render","secs","view_running_time","hourNum","Math","floor","hourMod","minuteNum","minuteMod","hour","minute","second","e","openPopup","position","width","height","borderBottom","display","cursor","top","left","paddingTop","paddingLeft","fontSize","color","title","transform"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ProgressStateTextBox from \"./ProgressStateTextBox\";\nimport ButtonControl from \"./ButtonControl\";\nimport * as R from \"../Resources\";\nimport axios from \"axios\";\n\nclass WorkItem extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: props.value,\n            opacity: 1.0,\n            backgroundColor: '#212121',\n\n        };\n        this.handleMouseHover = this.handleMouseHover.bind(this);\n        this.handleMouseLeave = this.handleMouseLeave.bind(this);\n\n        // console.log(this.state.item)\n    }\n\n    handleMouseHover() { this.setState(this.toggleHoverState); }\n    handleMouseLeave() { this.setState(this.toggleLeaveState); }\n\n    toggleHoverState(state) { return { opacity: 0.5, backgroundColor: '#323232' }; }\n    toggleLeaveState(state) { return { opacity: 1.0, backgroundColor: '#212121' }; }\n\n    attach() {\n\n        // const currentState = this.state.item.current_state;\n        // if(currentState === 'processing') {\n        //     alert('수집이 진행 중입니다.');\n        //     return;\n        // }\n\n        const request = async () => {\n            let data = { gid: this.state.item.id };\n            const response = await axios.post('http://localhost:3001/action/attach_work', data);\n            if (response.status !== 200) {\n                alert('요청한 작업을 수행할 수 없습니다.');\n            } else {\n                // alert('처리되었습니다.');\n                this.setState( { value: R.STATE_PROCESSING } )\n                window.location.reload();\n            }\n        };\n        request()\n    }\n\n    play() {\n\n        // const currentState = this.state.item.current_state;\n        // if(currentState === 'processing') {\n        //     alert('수집이 진행 중입니다.');\n        //     return;\n        // }\n\n        const request = async () => {\n            let data = { gid: this.state.item.id };\n            const response = await axios.post('http://localhost:3001/action/attach_work', data);\n            if (response.status !== 200) {\n                alert('요청한 작업을 수행할 수 없습니다.');\n            } else {\n                // alert('처리되었습니다.');\n                this.setState( { value: R.STATE_PROCESSING } )\n                window.location.reload();\n            }\n        };\n        request()\n    }\n\n    pause() {\n\n        const currentState = this.state.item.current_state;\n        if(currentState !== 'processing') {\n            alert('수집이 진행 상태가 아닐 때는 사용할 수 없습니다.');\n            return;\n        }\n\n        const request = async () => {\n            let data = { group_id: this.state.item.group_id };\n            const response = await axios.post('http://localhost:3030/pause_work', data);\n            if (response.status !== 200) {\n                alert('요청한 작업을 수행할 수 없습니다.');\n            } else {\n                // alert('처리되었습니다.');\n                this.setState( { value: R.STATE_PAUSED } );\n                window.location.reload();\n            }\n        };\n        request()\n    }\n\n    stop() {\n\n        const currentState = this.state.item.current_state;\n        if(currentState === 'stopped') {\n            return;\n        }\n\n        const request = async () => {\n            let data = { group_id: this.state.item.group_id };\n            const response = await axios.post('http://localhost:3030/stop_work', data);\n            if (response.status !== 200) {\n                alert('요청한 작업을 수행할 수 없습니다.');\n            } else {\n                // alert('처리되었습니다.');\n                this.setState( { value: R.STATE_STOPPED } )\n                window.location.reload();\n            }\n        };\n        request()\n    }\n\n    finish() {\n        const request = async () => {\n            let data = { group_id: this.state.item.group_id };\n            const response = await axios.post('http://localhost:3030/finish_work', data);\n            if (response.status !== 200) {\n                alert('요청한 작업을 수행할 수 없습니다.');\n            } else {\n                // alert('처리되었습니다.');\n                this.setState( { value: R.STATE_FINISHED } )\n                window.location.reload();\n            }\n        };\n        request()\n    }\n\n    terminate() {\n\n        const currentState = this.state.item.current_state;\n        if(currentState === R.STATE_PROCESSING) {\n            alert('수집이 진행 중인 작업은 제거할 수 없습니다.');\n            return;\n        }\n\n        if(window.confirm('선택한 작업을 제거하시겠습니까?')) {\n            const request = async () => {\n                let data = {group_id: this.state.item.group_id};\n                const response = await axios.post('http://localhost:3030/terminate_work', data);\n                if (response.status !== 200) {\n                    alert('요청한 작업을 수행할 수 없습니다.');\n                } else {\n                    this.setState({value: R.STATE_TERMINATED});\n                    window.location.reload();\n                }\n            };\n            request()\n        }\n    }\n    error() { this.setState( { value: R.STATE_ERROR } ) }\n\n    renderProgressStateTextBox() {\n\n        // alert(this.state.item.work_state)\n        return <ProgressStateTextBox\n            value={this.state.item.work_state}\n        />;\n    }\n\n    renderButtonProcess() {\n        return <ButtonControl\n            value={ R.STATE_PROCESSING }\n            currentState = {this.state.item.work_state}\n            groupdId = {this.state.item.work_group_no}\n            onClick={()=> this.play()}\n        />\n    }\n\n    // renderButtonPause() {\n    //     return <ButtonControl\n    //         value={R.STATE_PAUSED}\n    //         currentState = {this.state.item.work_state}\n    //         groupdId = {this.state.item.work_group_no}\n    //         onClick={()=> this.pause()}\n    //     />\n    // }\n\n    renderButtonStop() {\n        return <ButtonControl\n            value={R.STATE_STOPPED}\n            currentState = {this.state.item.work_state}\n            groupdId = {this.state.item.work_group_no}\n            onClick={()=> this.stop()}\n        />\n    }\n\n    // renderButtonTerminate() {\n    //     return <ButtonControl\n    //         value={R.STATE_TERMINATED}\n    //         currentState = {this.state.item.current_state}\n    //         groupdId = {this.state.item.group_id}\n    //         onClick={()=> this.terminate()}\n    //     />\n    // }\n    //\n    // renderButtonFinish() {\n    //     return <ButtonControl\n    //         value={R.STATE_FINISHED}\n    //         currentState = {this.state.item.current_state}\n    //         groupdId = {this.state.item.group_id}\n    //         onClick={()=> this.finish()}\n    //     />\n    // }\n\n\n\n    render() {\n\n        const secs = this.state.item.view_running_time;\n\n        const hourNum = Math.floor(secs / 3600);\n        const hourMod = secs % 3600;\n        const minuteNum = Math.floor(hourMod / 60);\n        const minuteMod = hourMod % 60;\n\n        const hour   = (hourNum < 10 ? '0':'') + hourNum;\n        const minute = (minuteNum < 10 ? '0':'') + minuteNum;\n        const second = (minuteMod < 10 ? '0':'') + minuteMod;\n\n        return (\n        <div\n            onMouseEnter={this.handleMouseHover}\n            onMouseLeave={this.handleMouseLeave}\n            onClick={(e) => {\n                this.props.openPopup();\n            }}\n            style={{\n                position: 'relative',\n                width: '100%',\n                height:130,\n                backgroundColor: this.state.backgroundColor,\n                borderBottom: '1px solid black',\n                display: 'flex',\n                cursor: 'pointer',\n                }}\n        >\n            <div>\n                <div\n                    style={{\n                        position: 'absolute',\n                        top:'20%',\n                        left: '2%',\n                        display: 'flex'\n                    }}>\n                    {this.renderProgressStateTextBox()}\n                    <div style={{ paddingTop:6, paddingLeft: 20, fontSize:16, color: '#666666' }}>\n                        경과:&nbsp;<label style={{color:'#ff9e01', fontSize:18}}>{hour}:{minute}:{second}</label>\n                        {/*&nbsp;&nbsp;/&nbsp;&nbsp;*/}\n                        {/*완료:&nbsp;&nbsp;<label style={{color:'#a9d18e', fontSize:18}}>{this.state.item.current_work_count}</label>*/}\n                        {/*&nbsp;건&nbsp;(총&nbsp;*/}\n                        {/*<label style={{color:'#0099ff', fontSize:18}}>{this.state.item.total_work_count}</label>건)&nbsp;*/}\n                    </div>\n                </div>\n                <div\n                    style={{\n                        position: 'absolute',\n                        top:'58%',\n                        left: '2%',\n                        display: 'flex',\n                        fontSize: '16pt'\n                    }}>\n                    {this.state.item.title}\n                </div>\n            </div>\n            <div\n                style={{\n                    // float: 'right',\n                    position: 'absolute',\n                    top: '50%',\n                    left: '86%',\n                    transform: 'translate(-20%, -50%)',\n                    display: 'flex',\n                }}\n            >\n                {this.renderButtonProcess()}&nbsp;&nbsp;\n                {/*{this.renderButtonPause()}&nbsp;&nbsp;*/}\n                {this.renderButtonStop()}&nbsp;&nbsp;\n                {/*{this.renderButtonTerminate()}*/}\n\n            </div>\n\n\n        </div>\n        );\n    }\n}\n\nexport default WorkItem;"]},"metadata":{},"sourceType":"module"}